Task 1
int[] arr = {28, 230, 9, 310, 72};

int getRandom(){
  int index = (int) random(arr.length);
  return arr[index];
}

void setup(){
  println(getRandom());
}

Task 2:

void setup(){
  // 2.b Kald metoden fra setup
  printPartOfWord("København", 0, 3);
  
  // 2.d De sidste 4 bogstaver
  String ord = "Processing";
  printPartOfWord(ord, ord.length()-4, ord.length());
  
  // 2.e Test med forkerte argumenter
  println("\nTest med forkerte argumenter:");
  printPartOfWord("test", -1, 3);     // negative værdier
  printPartOfWord("test", 3, 1);      // start > slut
  printPartOfWord("test", 0, 10);     // index for høj
}

void printPartOfWord(String ord, int startIndex, int slutIndex){
  // 2.e Fejlhåndtering - tjek negative værdier
  if(startIndex < 0 || slutIndex < 0){
    println("Fejl: Negative værdier ikke tilladt");
    return;
  }
  
  // 2.e Fejlhåndtering - tjek om start > slut
  if(startIndex > slutIndex){
    println("Fejl: Start-index skal være mindre end slut-index");
    return;
  }
  
  // 2.e Fejlhåndtering - tjek om index er for høj
  if(slutIndex > ord.length()){
    println("Fejl: Slut-index er større end ordets længde (" + ord.length() + ")");
    return;
  }
  
  // 2.e Fejlhåndtering - tjek om start-index er for høj
  if(startIndex >= ord.length()){
    println("Fejl: Start-index er større end eller lig ordets længde");
    return;
  }
  
  // Print udsnittet
  String udsnit = ord.substring(startIndex, slutIndex);
  println("Udsnit af '" + ord + "' fra index " + startIndex + " til " + slutIndex + ": " + udsnit);
}



task 3 

void setup() {
  String[] rappers = {
    "Grandmaster Flash", 
    "Run DMC", 
    "Tupac Shakur", 
    "The Notorious B.I.G.", 
    "Nas"
  };

  String[] hits = {
    "The Message", 
    "Walk This Way", 
    "California Love", 
    "Juicy", 
    "N.Y. State of Mind"
  };

  for (int i = 0; i < rappers.length; i++) {
    println((i+1) + ". " + rappers[i] + " : \"" + hits[i] + "\"");
  }
}


TASK 6

int[][] board = new int[8][8];
int sideLength = 40;

void setup() {
  size(320, 320);
  for (int x = 0; x < 8; x++) {
    for (int y = 0; y < 8; y++) {
      board[x][y] = (x + y) % 2 == 0 ? 0 : 1;
    }
  }
}

void draw() {
  for (int x = 0; x < 8; x++) {
    for (int y = 0; y < 8; y++) {
      fill(board[x][y] == 0 ? 0 : 255);
      rect(x * sideLength, y * sideLength, sideLength, sideLength);
    }
  }
}
